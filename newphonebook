package edu.project3;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;  
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
/**
 * 
 * @author stfnylim
 *
 */
public class Phonebook{
	
	
	public static ArrayList<Contact> phonebook = new ArrayList<Contact>();
	
	/*to modify phonebook
	 * 
	 */
	public Phonebook(Contact contact, String option, String change){
		
		if (option == "name") {
			contact.setName(change);
		}
		else if (option == "number") {
			contact.setNumber(change);
		}
		else if (option == "email") {
			contact.setEmail(change);
		}
		else if (option == "note") {
			contact.setNote(change);
		}
	}

	
	public static void getContacts() {
		System.out.println("Contacts:");
		for (int i=0;i<=phonebook.size()-1;i++) {
			
			System.out.println(phonebook.get(i));
		}
			
	}
	
	public void deleteContact(Contact contact) {
		phonebook.remove(contact);
		// error message
	}
	public static void addContact(Contact contact) {
		phonebook.add(contact);
		//error message
	}
	//-------------- favorite contacts ------------------
	
	public static ArrayList<String> favoriteContacts = new ArrayList<String>();
	
	public static void addFavoriteContact(int number, Contact contact) {
		favoriteContacts.add(number-1,contact.contactName);
	}
	
	public static void changeFavorite(int originalNumber, int newNumber) {
		//favoriteContacts.
	}
	
	public static void displayFavorites() {
		System.out.println("Favorite Contacts: ");
		for (int i=0;i<5;i++) {
			
			System.out.println(i+1+". " + favoriteContacts.get(i));
			
		}
	}
	 
	//-------------- phonelog---------------------
	
	public static ArrayList<String> phonelog = new ArrayList<String>();
	
	
	
	public static void dialLog() {
		System.out.println("Would you like to dial a number, contact, or favorite?");
		Scanner in = new Scanner(System.in);
		String dialOption = in.nextLine();
		System.out.println(dialOption);
		if (dialOption.equals("number")) {
			System.out.println("Please input number:");
			String number = in.nextLine();
			Phonebook.dialNumber(number);
			
		}
		if (dialOption.equals("contact")) {
			System.out.println("Please input contact:");
			String contact = in.nextLine();
			Phonebook.dialNumber(contact);
		}
		if (dialOption.equals("favorite")) {
			System.out.println("Please input favorite number:");
			String favNum = in.nextLine();
			Phonebook.dialNumber(favNum);
		}
	}
	
	public static void dialNumber(String number) {
		List<String> numbers = new ArrayList();
		for (int i=0; i<=phonebook.size();i++) {
			numbers.add(phonebook.get(i));
		}
		if (numbers.contains(number)) {
			
		}
		
		System.out.println("Dialing... " + number);
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
		LocalDateTime now = LocalDateTime.now();
		System.out.println("during: " + dtf.format(now));
		
		phonelog.add("");
		
	}
	public static void dialContact(Contact contact) {
		System.out.println("Dialing... " + contact.contactName);
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
		LocalDateTime now = LocalDateTime.now();
		System.out.println("during: " + dtf.format(now));
	}
	
	public static void dialFavorite(int number) {
		System.out.println("Dialing... " + favoriteContacts.get(number-1));
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
		LocalDateTime now = LocalDateTime.now();
		System.out.println("during: " + dtf.format(now));
	}
	public static void displayPhonelog() {
		
	}
	
}
